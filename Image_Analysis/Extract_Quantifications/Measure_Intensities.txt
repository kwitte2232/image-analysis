'''
Kristen Witte
Glotzer Lab
Measure_Intensities.txt

This macro measures the pixel intensity for a user-defined region. As the mCherry
intensities tend to be dim, the user must define the area to measure. Both the
Mean and Max intensity is measured at 3 independent user-defined ROIs. Likely, one
will take the average of these 3, but that is not done in this macro. Additionally,
another user-defined set of 3 ROIs is used to measure the background/non-illuminated
site. Again, likely the average will be taken of these 3 but that is not done
in this macro.

Requirements/Inputs:
Output from Cropper.txt

Dependencies:
None

Output:
1) 2 csv files for each cell cataloging intensity meausrements at the Target and
at the background
2) 2 zip files containing the ROIs for the Target and Background measurements
'''



//FUNCTIONS
//Closes all images
function closeAllImages()	{
 	while (nImages>0) {
		selectImage(nImages);
		close();
	}
}

//Prints the array in a human-readable form
function printArray(array) {
    string="";
    for (i=0; i<lengthOf(array); i++) {
        if (i==0) {
            string=string+array[i];
        } else {
            string=string+", "+array[i];
        }
    }
    print(string);
}

function measure_ROIs(num_rois, frames, data, m_type){

  for (n=0; n<num_rois; n++){
    roiManager('select', n);

    for (k=1; k<=frames; k++) {
      selectWindow("mCherry");
      setSlice(k);
      List.setMeasurements;
      mean = List.getValue("Mean");
      max = List.getValue("Max");
      setResult("Mean_ROI_" + n, k-1, mean);
      setResult("Max_ROI_" + n, k-1, max);
      updateResults();
    }
  }

  setBatchMode(false);
  saveAs("measurements", data + m_type + "_intensities.csv");
  if(isOpen("Results")){
    selectWindow("Results");
    run("Close");
  }
  roiManager("Save", data + m_type + "_ROIs.zip");
}

function set_ROIs(site){
  roiManager("Reset");
  makeOval(0,0,5,5);

  msg = "Place circle on site of " + site;
  waitForUser(msg + "\n" + "When finished, press OK");

  selectWindow("Targets");
  roiManager("Add");
  selectWindow("Targets");
  msg = "Move circle to the left or to the right";
  waitForUser(msg + "\n" + "When finished, press OK");
  roiManager("Add");
  selectWindow("Targets");
  msg = "Move circle to the left or to the right";
  waitForUser(msg + "\n" + "When finished, press OK");
  roiManager("Add");
  num_rois = roiManager("count");
  return num_rois;
}

//PROCESS
waitForUser("Choose the current directory");
dir=getDirectory("Choose a Directory");
IJ.log("dir: " + dir);

num_cells = getFileList(dir);
print("num_cells.length: " + num_cells.length);
printArray(num_cells);

count = 0;
for (i = 0; i < num_cells.length; i++){
    curr_cell = num_cells[i];
    print("curr_cell: " + curr_cell);
    data = dir + curr_cell;

    open(data + "Targets_crop.tif");
    frames = nSlices();
    run("Duplicate...", "title=Targets duplicate range=1-["+frames+"]");

    open(data + "mChStack_crop.tif");
    run("Duplicate...", "title=mCherry duplicate range=1-["+frames+"]");

    selectWindow("Targets");
    run("In [+]");
    run("In [+]");
    run("In [+]");
    run("In [+]");


    target_num_rois = set_ROIs('Target');
    //be = getSliceNumber();
    //IJ.log("bud emergence: " + be);

    selectWindow('mCherry');
    setBatchMode(true);
    measure_ROIs(target_num_rois, frames, data, 'Target');
    IJ.log("curr_cell: " + curr_cell);


    bckgrd_num_rois = set_ROIs('Background');
    selectWindow('mCherry');
    setBatchMode(true);
    measure_ROIs(bckgrd_num_rois, frames, data, 'Background');
    closeAllImages();
}
