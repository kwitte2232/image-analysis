setBatchMode(true);
waitForUser("Choose the directory of the images to be processed");
folder = getDirectory("Choose a directory");
proc=folder+"Processed_Images"+File.separator;
File.makeDirectory(proc);
	if (!File.exists(proc)) {
      exit("Unable to create directory");
	}

waitForUser("Select ZMAX_GFP");
gfpstack=folder+"ZMax_GFP"+File.separator;
run("Image Sequence...", "open=gfpstack number=90 starting=1 increment=1 scale=100 file=[] or=[] sort");
selectWindow("ZMax_GFP");
frames=nSlices();
run("Duplicate...", "title=GFP_Duplicate duplicate range=1-["+frames+"]");
runMacro("BleachCorrection.txt");

waitForUser("Select ZMAX_dsRED");
dsREDstack=folder+"ZMax_dsRED"+File.separator;
run("Image Sequence...", "open=dsREDstack number=90 starting=1 increment=1 scale=100 file=[] or=[] sort");
selectWindow("ZMax_dsRED");
run("Duplicate...", "title=dsRED_Duplicate duplicate range=1-["+frames+"]");
runMacro("BleachCorrection.txt");

run("Merge Channels...", "c1=dsRED_Duplicate c2=GFP_Duplicate create keep");
waitForUser("Adjust brightness levels. \n \n Click OK when finished.");
run("Stack to RGB", "slices");
selectWindow("Composite");
run("8-bit");
run("MultiStackReg", "stack_1=Composite action_1=Align file_1=[] stack_2=None action_2=Ignore file_2=[] transformation=Translation save");
title="MultiStack_Merge";
saveAs("Tiff", proc+title);
selectWindow("GFP_Duplicate");
run("MultiStackReg", "stack_1=GFP_Duplicate action_1=[Load Transformation File] file_1=[] stack_2=None action_2=Ignore file_2=[] transformation=Translation");
title="GFP";
saveAs("Tiff", proc+title);
selectWindow("dsRED_Duplicate");
run("MultiStackReg", "stack_1=dsRED_Duplicate action_1=[Load Transformation File] file_1=[] stack_2=None action_2=Ignore file_2=[] transformation=Translation");
title="dsRED";
saveAs("Tiff", proc+title);
setBatchMode(false);
run("Merge Channels...", "c1=dsRED.tif c2=GFP.tif create keep");
waitForUser("Adjust brightness levels. \n \n Click OK when finished.");
run("Stack to RGB", "slices");
title="Merge";
saveAs("Tiff", proc+title);