do	{
	waitForUser("Choose a directory containing the image stacks to be processed.\n \nThe directory must contain a sub-directory (processedAreas) that contains corresponding ROIs");
	dir=getDirectory("Choose a directory");
	exists=File.isDirectory(dir+"processedAreas/");
}	while (exists==0)
	
procDir=dir+"processedAreas/";
prefix=getString("Enter a prefix for the output data headers.", "");

setBatchMode(true);
sliceNames=newArray("gfp", "pre", "post");
numToSubtract=newArray(5, 3, 2);
areaNames=newArray("WC", "CP", "PM");

list=getFileList(procDir);
for (i=0; i<list.length; i++) {
	roiManager("Reset");
	name=replace(list[i], "_ROIs.zip", "");
	open(dir+name+".tif");
	width=getWidth();
	height=getHeight();
	depth=nSlices;
	roiManager("Open", procDir+name+"_ROIs.zip");
	count=roiManager("count");

	for (q=1; q<=depth; q++)	{
		setSlice(q);
		roiManager("Select", count-1);
		getRawStatistics(nPix, mean, min, max, std, hist);
		median=getMedian(hist, nPix);
		run("Select None");
		run("Subtract...", "value="+median+" slice");
	}
	saveAs("Tiff", procDir+name+"_BGSubt.tif");
	
	// waitForUser("Click OK to proceed.");	// Debugging
	
	//closeAllImages();
	
	//open(procDir+name+"_BGSubt.tif");
			
	setResult("Label", i, prefix+"_"+name);
	roiManager("Select", count-5);
	setSlice(1);
	getStatistics(area, mean, min, max, std);
	setResult("Area", i, area);
	
	for (r=0; r<3; r++)	{
		roiManager("Select", count-numToSubtract[r]);
		for (s=0; s<2; s++)	{
			setSlice(s+1);
			getStatistics(area, mean, min, max, std);
			setResult(prefix+"_"+areaNames[r]+sliceNames[s], i, mean);
		}
		for (s=2; s<depth; s++)	{
			t=s-1;
			setSlice(s+1);
			getStatistics(area, mean, min, max, std);
			setResult(prefix+"_"+areaNames[r]+sliceNames[2]+t, i, mean);
		}		
	}
	
	CPpre=getResult(prefix+"_"+areaNames[1]+sliceNames[1], i);
	PMpre=getResult(prefix+"_"+areaNames[2]+sliceNames[1], i);
	setResult(prefix+"_preRatio", i, PMpre/CPpre);
	for (s=2; s<depth; s++)	{
		t=s-1;
		CPpost=getResult(prefix+"_"+areaNames[1]+sliceNames[2]+t, i);
		PMpost=getResult(prefix+"_"+areaNames[2]+sliceNames[2]+t, i);
		setResult(prefix+"_postRatio"+t, i, PMpost/CPpost);
	}
	
	updateResults();
	saveAs("measurements", procDir+prefix+"_areas.xls");
}

selectWindow("Results");
run("Close");
closeAllImages();

function closeAllImages()	{
 	while (nImages>0) {
		selectImage(nImages);
		close(); 
	}
}


function openStack()	{
	open();
	run("In");
	run("In");
	run("In");
	run("In");
//	run("In");
	return replace(getTitle(), ".tif", "");
}


function getMedian(hist, nPix) {
  sum = 0;
  i = -1;
  nPix2 = nPix/2;
  do {
	  sum += hist[++i];
  } while (sum<=nPix2);
  return i;
}